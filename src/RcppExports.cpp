// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// gemmacpp
std::vector<std::string> gemmacpp(Rcpp::List args, std::string prompt, int verbosity);
RcppExport SEXP _rgemmacpp_gemmacpp(SEXP argsSEXP, SEXP promptSEXP, SEXP verbositySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type args(argsSEXP);
    Rcpp::traits::input_parameter< std::string >::type prompt(promptSEXP);
    Rcpp::traits::input_parameter< int >::type verbosity(verbositySEXP);
    rcpp_result_gen = Rcpp::wrap(gemmacpp(args, prompt, verbosity));
    return rcpp_result_gen;
END_RCPP
}
// test
void test(std::string tokenizer, std::string compressed_weights, std::string model);
RcppExport SEXP _rgemmacpp_test(SEXP tokenizerSEXP, SEXP compressed_weightsSEXP, SEXP modelSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type tokenizer(tokenizerSEXP);
    Rcpp::traits::input_parameter< std::string >::type compressed_weights(compressed_weightsSEXP);
    Rcpp::traits::input_parameter< std::string >::type model(modelSEXP);
    test(tokenizer, compressed_weights, model);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rgemmacpp_gemmacpp", (DL_FUNC) &_rgemmacpp_gemmacpp, 3},
    {"_rgemmacpp_test", (DL_FUNC) &_rgemmacpp_test, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_rgemmacpp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
